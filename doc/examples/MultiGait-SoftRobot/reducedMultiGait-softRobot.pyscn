import Sofa
import os
pathSceneFile = os.path.dirname(os.path.abspath(__file__))
pathMesh = os.path.dirname(os.path.abspath(__file__))+'/Mesh/'
# Units: mm, kg, s.     Pressure in kPa = k (kg/(m.s^2)) = k (g/(mm.s^2) =  kg/(mm.s^2)

##########################################
### Reduced Basis Definition           ###
##########################################
modesRobot = pathSceneFile + "/ROM_data/modesQuadrupedWellConverged.txt"
nbModes = 63
modesPositionStr = '0'
for i in range(1,nbModes):
    modesPositionStr = modesPositionStr + ' 0'

########################################################################
### Reduced Integration Domain for the PDMS membrane layer           ###
########################################################################
RIDMembraneFile = pathSceneFile + "/ROM_data/reducedIntegrationDomain_quadrupedMembraneWellConvergedNG005.txt"
weightsMembraneFile = pathSceneFile + "/ROM_data/weights_quadrupedMembraneWellConvergedNG005.txt"

#######################################################################
### Reduced Integration Domain for the main silicone body           ###
#######################################################################
RIDFile = pathSceneFile + '/ROM_data/reducedIntegrationDomain_quadrupedBodyWellConvergedNG003.txt'
weightsFile = pathSceneFile + '/ROM_data/weights_quadrupedBodyWellConvergedNG003.txt'

##############################################################
### Reduced Integration Domain in terms of nodes           ###
##############################################################
listActiveNodesFile = pathSceneFile + '/ROM_data/listActiveNodes_quadrupedBodyMembraneWellConvergedNG003and005.txt'

##########################################
### Reduced Order Booleans             ###
##########################################
performECSWBoolBody = "true"
performECSWBoolMembrane = "true"
performECSWBoolMappedMatrix = "true"
prepareECSWBool = "false"


def createScene(rootNode):
                rootNode.createObject('RequiredPlugin', name='SoftRobots', pluginName='SoftRobots')
                rootNode.createObject('RequiredPlugin', name='SofaPython', pluginName='SofaPython')
                rootNode.createObject('RequiredPlugin', name='ModelOrderReduction', pluginName='ModelOrderReduction')
                rootNode.findData('dt').value=0.05

                rootNode.findData('gravity').value='0 0 -9810';
                rootNode.createObject('VisualStyle', displayFlags='showVisualModels hideBehaviorModels hideCollisionModels hideBoundingCollisionModels showForceFields showInteractionForceFields hideWireframe')

                rootNode.createObject('FreeMotionAnimationLoop')
                rootNode.createObject('GenericConstraintSolver', printLog=False, tolerance="1e-4", maxIterations="1000")
                rootNode.createObject('CollisionPipeline', verbose="0")
                rootNode.createObject('BruteForceBroadPhase', name="N2")
                rootNode.createObject('BVHNarrowPhase')
                rootNode.createObject('CollisionResponse', response="FrictionContact", responseParams="mu=0.7")
                rootNode.createObject('LocalMinDistance', name="Proximity", alarmDistance="2.5", contactDistance="0.5", angleCone="0.01")

                rootNode.createObject('BackgroundSetting', color='0 0.168627 0.211765')
                rootNode.createObject('OglSceneFrame', style="Arrows", alignment="TopRight")
                solverNode = rootNode.createChild('solverNode')
                solverNode.createObject('EulerImplicit', name='odesolver',firstOrder="false", rayleighStiffness='0.1', rayleighMass='0.1', printLog=False,verbose=False)
                solverNode.createObject('SparseLDLSolver', name="preconditioner", template="CompressedRowSparseMatrix3d")
                solverNode.createObject('GenericConstraintCorrection', solverName='preconditioner')
                solverNode.createObject('MechanicalMatrixMapperMOR', template='Vec1d,Vec1d', object1='@./reducedModel/alpha', object2='@./reducedModel/alpha', nodeToParse='@./reducedModel/model', performECSW=performECSWBoolMappedMatrix, listActiveNodesPath=listActiveNodesFile,timeInvariantMapping1 = True,timeInvariantMapping2 = True, saveReducedMass=False, usePrecomputedMass=False, precomputedMassPath='ROM_data/quadrupedMass_reduced63modes.txt', printLog=False)


                ##########################################
                # FEM Reduced Model                      #
                ##########################################
                reducedModel = solverNode.createChild('reducedModel')
                reducedModel.createObject('MechanicalObject', template='Vec1d',name='alpha', position=modesPositionStr,printLog=False)
                ##########################################
                # FEM Model                              #
                ##########################################
                model = reducedModel.createChild('model')
                model.createObject('MeshVTKLoader', name='loader', filename=pathMesh+'full_quadriped_fine.vtk')
                model.createObject('TetrahedronSetTopologyContainer',src = '@loader')
                model.createObject('MechanicalObject', name='tetras', template='Vec3d', showIndices=False, showIndicesScale='4e-5', rx='0',printLog=False)
                model.createObject('ModelOrderReductionMapping', input='@../alpha', output='@./tetras',modesPath=modesRobot, printLog=False, mapMatrices = '0')
                model.createObject('UniformMass',name='quadrupedMass', totalMass='0.035', printLog=False)
                model.createObject('HyperReducedTetrahedronFEMForceField', template='Vec3d', name='Append_HyperReducedFF_QuadrupedWellConverged_'+str(nbModes)+'modes', method='large', poissonRatio='0.05',  youngModulus='70', drawAsEdges="0", prepareECSW=prepareECSWBool, performECSW=performECSWBoolBody, nbModes=str(nbModes), modesPath=modesRobot, RIDPath=RIDFile, weightsPath=weightsFile, nbTrainingSet="93", periodSaveGIE="50",printLog=False)		  
                model.createObject('BoxROI', name='boxROISubTopo', box='0 0 0 150 -100 1', drawBoxes=True) 
                model.createObject('BoxROI', name='membraneROISubTopo', box='0 0 -0.1 150 -100 0.1',computeTetrahedra="false", drawBoxes=True) 
                #model.createObject('PythonScriptController', filename="keyInteractiveController.py", classname="keyInteractiveController")
                model.createObject('PythonScriptController', filename="waveController.py", classname="waveController")


                ##########################################
                # Sub topology                           #
                ##########################################
                modelSubTopo = model.createChild('modelSubTopo')
                modelSubTopo.createObject('TriangleSetTopologyContainer', position='@membraneROISubTopo.pointsInROI', triangles="@membraneROISubTopo.trianglesInROI", name='container')
                modelSubTopo.createObject('HyperReducedTriangleFEMForceField', template='Vec3d', name='Append_subTopoFEM', method='large', poissonRatio='0.49',  youngModulus='5000', prepareECSW=prepareECSWBool, performECSW=performECSWBoolMembrane, nbModes=str(nbModes), modesPath=modesRobot, RIDPath=RIDMembraneFile, weightsPath=weightsMembraneFile, nbTrainingSet="93", periodSaveGIE="50",printLog=False)
                

                ##########################################
                # Constraint                             #
                ##########################################
                centerCavity = model.createChild('centerCavity')
                centerCavity.createObject('MeshSTLLoader', name='loader', filename=pathMesh+'quadriped_Center-cavity_finer.stl')
                centerCavity.createObject('Mesh', src='@loader', name='topo')
                centerCavity.createObject('MechanicalObject', name='centerCavity')
                centerCavity.createObject('SurfacePressureConstraint', name="SurfacePressureConstraint", template='Vec3d', value="0.000", triangles='@topo.triangles', drawPressure='0', drawScale='0.0002', valueType="volumeGrowth")
                centerCavity.createObject('BarycentricMapping', name='mapping',  mapForces=False, mapMasses=False)
                                
                rearLeftCavity = model.createChild('rearLeftCavity')
                rearLeftCavity.createObject('MeshSTLLoader', name='loader', filename=pathMesh+'quadriped_Rear-Left-cavity_finer.stl')
                rearLeftCavity.createObject('Mesh', src='@loader', name='topo')
                rearLeftCavity.createObject('MechanicalObject', name='rearLeftCavity')
                rearLeftCavity.createObject('SurfacePressureConstraint', name="SurfacePressureConstraint", template='Vec3d', valueType="volumeGrowth", value="0.0000", triangles='@topo.triangles', drawPressure='0', drawScale='0.0002')
                rearLeftCavity.createObject('BarycentricMapping', name='mapping',  mapForces=False, mapMasses=False)

                rearRightCavity = model.createChild('rearRightCavity')
                rearRightCavity.createObject('MeshSTLLoader', name='loader', filename=pathMesh+'quadriped_Rear-Right-cavity_finer.stl')
                rearRightCavity.createObject('Mesh', src='@loader', name='topo')
                rearRightCavity.createObject('MechanicalObject', name='rearRightCavity')
                rearRightCavity.createObject('SurfacePressureConstraint', name="SurfacePressureConstraint", template='Vec3d', value="0.000", triangles='@topo.triangles', drawPressure='0', drawScale='0.0002', valueType="volumeGrowth")
                rearRightCavity.createObject('BarycentricMapping', name='mapping',  mapForces=False, mapMasses=False)
                                
                frontLeftCavity = model.createChild('frontLeftCavity')
                frontLeftCavity.createObject('MeshSTLLoader', name='loader', filename=pathMesh+'quadriped_Front-Left-cavity_finer.stl')
                frontLeftCavity.createObject('Mesh', src='@loader', name='topo')
                frontLeftCavity.createObject('MechanicalObject', name='frontLeftCavity')
                frontLeftCavity.createObject('SurfacePressureConstraint', name="SurfacePressureConstraint", template='Vec3d', value="0.0000", triangles='@topo.triangles', drawPressure='0', drawScale='0.0002', valueType="volumeGrowth")
                frontLeftCavity.createObject('BarycentricMapping', name='mapping',  mapForces=False, mapMasses=False)
                                
                frontRightCavity = model.createChild('frontRightCavity')
                frontRightCavity.createObject('MeshSTLLoader', name='loader', filename=pathMesh+'quadriped_Front-Right-cavity_finer.stl')
                frontRightCavity.createObject('Mesh', src='@loader', name='topo')
                #frontRightCavity.createObject('MechanicalObject', name='frontRightCavity', translation='-80 55 0')
                frontRightCavity.createObject('MechanicalObject', name='frontRightCavity')
                frontRightCavity.createObject('SurfacePressureConstraint', name="SurfacePressureConstraint", template='Vec3d', value="0.0000", triangles='@topo.triangles', drawPressure='0', drawScale='0.0002', valueType="volumeGrowth")
                frontRightCavity.createObject('BarycentricMapping', name='mapping',  mapForces=False, mapMasses=False)
                                
                modelCollis = model.createChild('modelCollis')
                modelCollis.createObject('MeshSTLLoader', name='loader', filename=pathMesh+'quadriped_collision.stl', rotation="0 0 0", translation="0 0 0")
                modelCollis.createObject('TriangleSetTopologyContainer', src='@loader', name='container')
                modelCollis.createObject('MechanicalObject', name='collisMO', template='Vec3d')
                modelCollis.createObject('Triangle',group="0")
                modelCollis.createObject('Line',group="0")
                modelCollis.createObject('Point',group="0")
                modelCollis.createObject('BarycentricMapping')


                ##########################################
                # Visualization                          #
                ##########################################
                modelVisu = model.createChild('visu')        
                modelVisu.createObject('MeshSTLLoader', name='loader', filename=pathMesh+"quadriped_collision.stl")
                modelVisu.createObject('OglModel', src='@loader', template='ExtVec3f', color='0.7 0.7 0.7 0.6')
                modelVisu.createObject('BarycentricMapping')

                planeNode = rootNode.createChild('Plane')
                planeNode.createObject('MeshObjLoader', name='loader', filename="mesh/floorFlat.obj", triangulate="true")
                planeNode.createObject('Mesh', src="@loader")
                planeNode.createObject('MechanicalObject', src="@loader", rotation="90 0 0", translation="0 35 -1", scale="15")
                planeNode.createObject('Triangle',simulated="0", moving="0",group="1")
                planeNode.createObject('Line',simulated="0", moving="0",group="1")
                planeNode.createObject('Point',simulated="0", moving="0",group="1")
                planeNode.createObject('OglModel',name="Visual", src="@loader", color="1 0 0 1",rotation="90 0 0", translation="0 35 -1", scale="15")

                return rootNode
